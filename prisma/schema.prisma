// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

// generator client {
//     provider = "prisma-client-js"
//     previewFeatures = ["jsonProtocol"]
// }

// datasource db {
//     provider = "sqlite"
//     // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
//     // Further reading:
//     // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
//     // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
//     url      = env("DATABASE_URL")
// }

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id              String           @id @default(cuid())
    name            String?
    email           String?          @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
    achievements    Achievement[]
    languages       Language[]
    credits         Int              @default(100)
    creditsSpent    Int              @default(0)
    exp             Float            @default(0)
    languageSession LanguageSession?
    level Int @default(1)
}
model Language {
    id               Int               @id @default(autoincrement())
    name             String
    description      String?
    users            User[]
    acheivements     Achievement[]
    languageSessions LanguageSession[]
}

model LanguageSession {
    id         Int       @id @default(autoincrement())
    language   Language  @relation(fields: [languageId], references: [id])
    languageId Int
    user       User      @relation(fields: [userId], references: [id])
    userId     String    @unique
    startedAt  DateTime  @default(now())
    endedAt    DateTime?
}


model Achievement {
    id          Int      @id @default(autoincrement())
    name        String
    description String?
    user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      String
    language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
    languageId  Int
    icon_url    String
}

model Level {
    id          Int      @id @default(autoincrement())
    level Int
    expRequired Float
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
